services:
  app:
    image: my-spring-boot-fintech:latest
    container_name: spring-boot-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${API_PORT}:8080"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f ${API_HEALTHCHECK_URL} || exit 1"]
      interval: ${API_HEALTHCHECK_INTERVAL}
      timeout: ${API_HEALTHCHECK_TIMEOUT}
      retries: 3
    networks:
      - my-network

  db:
    image: mysql:8.0
    container_name: mysql-db
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "${DB_HEALTHCHECK_CMD}"]
      interval: ${DB_HEALTHCHECK_INTERVAL}
      timeout: ${DB_HEALTHCHECK_TIMEOUT}
      retries: 5
      start_period: ${DB_HEALTHCHECK_START_PERIOD}
    networks:
      - my-network

volumes:
  mysql-data:

networks:
  my-network:
